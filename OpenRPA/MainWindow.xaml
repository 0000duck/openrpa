<Window x:Class="OpenRPA.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:OpenRPA"
        
        xmlns:ribbon="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:avalonDock="http://schemas.xceed.com/wpf/xaml/avalondock"
        xmlns:dockctrl="clr-namespace:Xceed.Wpf.AvalonDock.Controls;assembly=Xceed.Wpf.AvalonDock"
        mc:Ignorable="d"
        Loaded="Window_Loaded" Closed="Window_Closed" Closing="Window_Closing" StateChanged="Window_StateChanged"
        Title="OpenRPA" Height="750" Width="1200">
    <Window.Resources>
        <local:BindingProxy x:Key="proxy" Data="{Binding}" />
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition  Height="120" />
            <RowDefinition />
            <RowDefinition Height="25"/>
        </Grid.RowDefinitions>
        <Ribbon DockPanel.Dock="Top" Margin="0,-22,0,0" Grid.Row="0">
            <Ribbon.ApplicationMenu>
                <RibbonApplicationMenu SmallImageSource="/OpenRPA;component/Resources/Buttons/Export.png">
                    <RibbonApplicationMenuItem Header="Settings" ImageSource="/OpenRPA;component/Resources/Buttons/Open.png" 
                                               Command="{Binding Data.SettingsCommand, Source={StaticResource proxy}}" CommandParameter="{Binding}" />
                    <RibbonApplicationMenuItem Header="Signout" ImageSource="/OpenRPA;component/Resources/Buttons/Revert.png" 
                                               Command="{Binding Data.SignoutCommand, Source={StaticResource proxy}}" CommandParameter="{Binding}" />
                    <RibbonApplicationMenuItem Header="Exit Application" ImageSource="/OpenRPA;component/Resources/Buttons/Signout.png" 
                                               Command="{Binding Data.ExitAppCommand, Source={StaticResource proxy}}" CommandParameter="{Binding}" />


                    <RibbonApplicationMenu.AuxiliaryPaneContent>
                        <RibbonGallery ScrollViewer.VerticalScrollBarVisibility="Auto">
                            <RibbonGalleryCategory MaxColumnCount="1">
                                <RibbonGalleryItem x:Name="GalleryItem1" Content="Application menu content" 
                                MouseOverBackground="Transparent"
                                MouseOverBorderBrush="Transparent"
                                CheckedBackground="Transparent"
                                CheckedBorderBrush="Transparent"
                                               />
                                <RibbonGalleryItem>
                                    <Hyperlink x:Name="linkOpenFlow" Command="{Binding Data.LinkOpenFlowCommand, Source={StaticResource proxy}}" CommandParameter="{Binding}" >OpenFlow</Hyperlink>
                                </RibbonGalleryItem>
                                <RibbonGalleryItem>
                                    <Hyperlink x:Name="linkNodeRED" Command="{Binding Data.LinkNodeREDCommand, Source={StaticResource proxy}}" CommandParameter="{Binding}" >NodeRED</Hyperlink>
                                </RibbonGalleryItem>
                            </RibbonGalleryCategory>
                        </RibbonGallery>
                    </RibbonApplicationMenu.AuxiliaryPaneContent>


                </RibbonApplicationMenu>
            </Ribbon.ApplicationMenu>
            <RibbonTab Header="General">
                <RibbonGroup Header="Files">
                    <RibbonMenuButton x:Name="ButtonNew" Label="New" LargeImageSource="/OpenRPA;component/Resources/Buttons/New.png">
                        <RibbonMenuItem Header="New Workflow"
                                Command="{Binding Data.NewWorkflowCommand, Source={StaticResource proxy}}" 
                                CommandParameter="{Binding ElementName=mainTabControl,Path=SelectedContent}" KeyTip="N" />
                        <RibbonMenuItem Header="New Project"
                                Command="{Binding Data.NewProjectCommand, Source={StaticResource proxy}}" 
                                CommandParameter="{Binding ElementName=mainTabControl,Path=SelectedContent}" />
                    </RibbonMenuButton>

                    <RibbonButton Label="Save" LargeImageSource="/OpenRPA;component/Resources/Buttons/Save.png" 
                                  Command="{Binding Data.SaveCommand, Source={StaticResource proxy}}" 
                                  CommandParameter="{Binding ElementName=mainTabControl,Path=SelectedContent}" KeyTip="S" />
                    <RibbonButton Label="Open" LargeImageSource="/OpenRPA;component/Resources/Buttons/Open.png" 
                                  Command="{Binding Data.OpenCommand, Source={StaticResource proxy}}" CommandParameter="{Binding}" />
                    <RibbonButton Label="Copy" LargeImageSource="/OpenRPA;component/Resources/Buttons/Copy.png" 
                                  Command="{Binding Data.CopyCommand, Source={StaticResource proxy}}" 
                                  CommandParameter="{Binding ElementName=mainTabControl,Path=SelectedContent}" />
                    <RibbonButton Label="Delete" LargeImageSource="/OpenRPA;component/Resources/Buttons/Delete.png" 
                                  Command="{Binding Data.DeleteCommand, Source={StaticResource proxy}}" 
                                  CommandParameter="{Binding ElementName=mainTabControl,Path=SelectedContent}" />
                    <RibbonButton Label="Permissions" LargeImageSource="/OpenRPA;component/Resources/Buttons/Manage.png" 
                                  Command="{Binding Data.PermissionsCommand, Source={StaticResource proxy}}" 
                                  CommandParameter="{Binding ElementName=mainTabControl,Path=SelectedContent}" />
                    <RibbonButton Label="Import" LargeImageSource="/OpenRPA;component/Resources/Buttons/Import.png" 
                                  Command="{Binding Data.ImportCommand, Source={StaticResource proxy}}" 
                                  CommandParameter="{Binding ElementName=mainTabControl,Path=SelectedContent}" />
                    <RibbonButton Label="Export" LargeImageSource="/OpenRPA;component/Resources/Buttons/Export.png" 
                                  Command="{Binding Data.ExportCommand, Source={StaticResource proxy}}" 
                                  CommandParameter="{Binding ElementName=mainTabControl,Path=SelectedContent}" />
                </RibbonGroup>
                <RibbonGroup Header="Runtime">
                    <RibbonButton Label="Play" LargeImageSource="/OpenRPA;component/Resources/Buttons/Play.png" 
                                  Command="{Binding Data.PlayCommand, Source={StaticResource proxy}}" 
                                  CommandParameter="{Binding ElementName=mainTabControl,Path=SelectedContent}"/>
                    <RibbonButton Label="Stop" LargeImageSource="/OpenRPA;component/Resources/Buttons/Stop.png" 
                                  Command="{Binding Data.StopCommand, Source={StaticResource proxy}}" 
                                  CommandParameter="{Binding ElementName=mainTabControl,Path=SelectedContent}" />
                    <RibbonButton Label="Record" LargeImageSource="/OpenRPA;component/Resources/Buttons/Record.png"
                                  Command="{Binding Data.RecordCommand, Source={StaticResource proxy}}" 
                                  CommandParameter="{Binding ElementName=mainTabControl,Path=SelectedContent}" />
                    <StackPanel Orientation="Horizontal">
                        <RibbonCheckBox IsChecked="{Binding VisualTracking}" Command="{Binding Data.VisualTrackingCommand, Source={StaticResource proxy}}" 
                                        CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}" />
                        <TextBlock Text="VisualTracking"></TextBlock>

                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <RibbonCheckBox IsChecked="{Binding SlowMotion}" Command="{Binding Data.SlowMotionCommand, Source={StaticResource proxy}}" 
                                        CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"  />
                        <TextBlock Text="Slow motion"></TextBlock>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <RibbonCheckBox IsChecked="{Binding Minimize}" Command="{Binding Data.MinimizeCommand, Source={StaticResource proxy}}" 
                                        CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"  />
                        <TextBlock Text="Minimize"></TextBlock>
                    </StackPanel>
                </RibbonGroup>
            </RibbonTab>
            <RibbonTab Header="Settings">
                <RibbonGroup Header="Cancel key">
                    <StackPanel>
                        <TextBox x:Name="cancelkey" GotKeyboardFocus="Cancelkey_GotKeyboardFocus" Width="80" Height="25" />
                    </StackPanel>
                </RibbonGroup>
                <RibbonGroup Header="Tesseract">
                    <StackPanel>
                        <ribbon:RibbonComboBox>
                            <ribbon:RibbonGallery SelectedItem="{Binding Path=defaultocrlangs}">
                                <ribbon:RibbonGalleryCategory ItemsSource="{Binding ocrlangs}" />
                            </ribbon:RibbonGallery>
                        </ribbon:RibbonComboBox>
                        <RibbonButton Content="Download" Click="TesseractLang_Click"></RibbonButton>
                    </StackPanel>

                </RibbonGroup>
                <RibbonGroup Header="Browser addons">
                    <RibbonButton Label="Chrome" LargeImageSource="/OpenRPA;component/Resources/Buttons/OpenChrome.png" 
                                  Command="{Binding Data.OpenChromePageCommand, Source={StaticResource proxy}}" CommandParameter="{Binding}" />
                    <RibbonButton Label="Firefox" LargeImageSource="/OpenRPA;component/Resources/Buttons/OpenFirefox.png" 
                                  Command="{Binding Data.OpenFirefoxPageCommand, Source={StaticResource proxy}}" CommandParameter="{Binding}" />

                </RibbonGroup>
                <RibbonGroup Header="Detectors">
                    <RibbonButton Label="Detectors" LargeImageSource="/OpenRPA;component/Resources/Buttons/Open.png" 
                                  Command="{Binding Data.DetectorsCommand, Source={StaticResource proxy}}" CommandParameter="{Binding}" />
                </RibbonGroup>
                <RibbonGroup Header="RunPlugins">
                    <RibbonButton Label="RunPlugins" LargeImageSource="/OpenRPA;component/Resources/Buttons/Open.png" 
                                  Command="{Binding Data.RunPluginsCommand, Source={StaticResource proxy}}" CommandParameter="{Binding}" />
                </RibbonGroup>
                <RibbonGroup Header="RecorderPlugins">
                    <RibbonButton Label="RecorderPlugins" LargeImageSource="/OpenRPA;component/Resources/Buttons/Open.png" 
                                  Command="{Binding Data.RecorderPluginsCommand, Source={StaticResource proxy}}" CommandParameter="{Binding}" />
                </RibbonGroup>
                <RibbonGroup Header="Packages">
                    <RibbonButton Label="Packages" LargeImageSource="/OpenRPA;component/Resources/Buttons/Package.png" 
                                  Command="{Binding Data.ManagePackagesCommand, Source={StaticResource proxy}}" CommandParameter="{Binding}" />
                </RibbonGroup>
                <RibbonGroup Header="Runtime">
                    <StackPanel Orientation="Horizontal">
                        <RibbonCheckBox IsChecked="{Binding record_overlay}" Command="{Binding Data.VisualTrackingCommand, Source={StaticResource proxy}}" 
                                        CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}" />
                        <TextBlock Text="Recording Overlay"></TextBlock>
                    </StackPanel>
                </RibbonGroup>
                <RibbonGroup Header="Logging">
                    <StackPanel Orientation="Horizontal">
                        <RibbonCheckBox IsChecked="{Binding log_warning}" Command="{Binding Data.LoggingOptionCommand, Source={StaticResource proxy}}" 
                                        CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}" />
                        <TextBlock Text="warning"></TextBlock>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <RibbonCheckBox IsChecked="{Binding log_debug}" Command="{Binding Data.LoggingOptionCommand, Source={StaticResource proxy}}" 
                                        CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}" />
                        <TextBlock Text="debug"></TextBlock>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <RibbonCheckBox IsChecked="{Binding log_verbose}" Command="{Binding Data.LoggingOptionCommand, Source={StaticResource proxy}}" 
                                        CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}" />
                        <TextBlock Text="verbose"></TextBlock>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <RibbonCheckBox IsChecked="{Binding log_selector}" Command="{Binding Data.LoggingOptionCommand, Source={StaticResource proxy}}" 
                                        CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}" />
                        <TextBlock Text="selector"></TextBlock>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <RibbonCheckBox IsChecked="{Binding log_selector_verbose}" Command="{Binding Data.LoggingOptionCommand, Source={StaticResource proxy}}" 
                                        CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}" />
                        <TextBlock Text="selector verbose"></TextBlock>
                    </StackPanel>
                </RibbonGroup>

            </RibbonTab>
            <!--<RibbonTab Header="Windows">
                <RibbonGroup Header="Windows">
                    <StackPanel>
                        <ribbon:RibbonCheckBox Label="Toolbox" IsChecked="{Binding ElementName=Toolbox, Path=IsHidden}"></ribbon:RibbonCheckBox>
                    </StackPanel>
                </RibbonGroup>
            </RibbonTab>-->
        </Ribbon>


        <avalonDock:DockingManager Grid.Row="1" x:Name="DManager" ActiveContentChanged="DManager_ActiveContentChanged">
            <avalonDock:DockingManager.Theme>
                <!--<avalonDock:AeroTheme/>-->
                <avalonDock:VS2010Theme/>
                <!--<avalonDock:ExpressionDarkTheme/>-->
                <!--<avalonDock:ExpressionLightTheme/>-->
                <!--<avalonDock:GenericTheme/>-->
                <!--<avalonDock:MetroTheme/>-->
            </avalonDock:DockingManager.Theme>
            <avalonDock:DockingManager.LayoutItemContainerStyle>
                <Style TargetType="{x:Type dockctrl:LayoutItem}" >
                    <Setter Property="Title" Value="{Binding Model.Title}" />
                    <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}" />
                    <Setter Property="CanClose"  Value="{Binding Model.CanClose}" />
                    <Setter Property="dockctrl:LayoutAnchorableItem.CanHide" Value="{Binding Model.CanHide}" />
                </Style>
            </avalonDock:DockingManager.LayoutItemContainerStyle>
            <!--<avalonDock:DockingManager.AnchorablePaneControlStyle>
                <Style TargetType="{x:Type dockctrl:LayoutAnchorableItem}" >
                    <Setter Property="dockctrl:LayoutAnchorableItem.CanHide"  Value="False" />
                </Style>
            </avalonDock:DockingManager.AnchorablePaneControlStyle>-->
            <avalonDock:LayoutRoot>
                <avalonDock:LayoutRoot.LeftSide>
                    <avalonDock:LayoutAnchorSide>
                        <avalonDock:LayoutAnchorGroup >
                            <avalonDock:LayoutAnchorable x:Name="dockSnippets" 
                                CanClose="False" CanAutoHide="True" CanHide="False" Title="Snippets" ContentId="Snippets" AutoHideWidth="250"
                                >
                                <ContentControl Content="{Binding Snippets}" Padding="0" Margin="0,0,0,0" />
                            </avalonDock:LayoutAnchorable>
                            <avalonDock:LayoutAnchorable x:Name="dockToolbox"  
                                CanClose="False" CanAutoHide="True" CanHide="False" Title="Toolbox" ContentId="Toolbox" AutoHideWidth="250"
                                >
                                <ContentControl Content="{Binding Toolbox}" Padding="0" Margin="0,0,0,0" />
                            </avalonDock:LayoutAnchorable>

                        </avalonDock:LayoutAnchorGroup>
                    </avalonDock:LayoutAnchorSide>
                </avalonDock:LayoutRoot.LeftSide>

                <avalonDock:LayoutPanel>
                    <avalonDock:LayoutDocumentPane x:Name="dockpane">
                    </avalonDock:LayoutDocumentPane>
                </avalonDock:LayoutPanel>

                <avalonDock:LayoutRoot.BottomSide>
                    <avalonDock:LayoutAnchorSide>
                        <avalonDock:LayoutAnchorGroup >
                            <avalonDock:LayoutAnchorable CanClose="False" CanAutoHide="True" CanHide="False"  x:Name="Logging" Title="Logging" ContentId="Logging" >
                                <TextBox Text="{Binding tracing.TraceMessages}" TextWrapping="Wrap" IsReadOnly="False" Margin="0,0,0,0" />
                            </avalonDock:LayoutAnchorable>
                            <avalonDock:LayoutAnchorable CanClose="False" CanAutoHide="True" CanHide="False"  x:Name="Output" Title="Output" ContentId="Output" >
                                <TextBox Text="{Binding tracing.OutputMessages}" TextWrapping="Wrap" IsReadOnly="False" Margin="0,0,0,0" />
                            </avalonDock:LayoutAnchorable>

                        </avalonDock:LayoutAnchorGroup>
                    </avalonDock:LayoutAnchorSide>
                </avalonDock:LayoutRoot.BottomSide>

                
                <avalonDock:LayoutRoot.RightSide>
                    <avalonDock:LayoutAnchorSide>
                        <avalonDock:LayoutAnchorGroup >
                            <avalonDock:LayoutAnchorable CanClose="False" CanAutoHide="True" CanHide="False" Title="Properties" ContentId="Properties" AutoHideWidth="250"
                                                         >
                                <ContentControl Content="{Binding Path=LastDesigner.Properties}" Padding="0" Margin="0,0,0,0" />
                            </avalonDock:LayoutAnchorable>

                        </avalonDock:LayoutAnchorGroup>
                    </avalonDock:LayoutAnchorSide>
                </avalonDock:LayoutRoot.RightSide>
            </avalonDock:LayoutRoot>
        </avalonDock:DockingManager>


        <StatusBar HorizontalAlignment="Stretch" VerticalAlignment="Center" Grid.Row="2" Height="25" Background="Gray">
            <StatusBar FocusManager.IsFocusScope="True" x:Name="StatusBar">
                <StatusBarItem x:Name="LabelStatusBar" Content="Disconnected" />
                <StatusBarItem VerticalAlignment="Top" HorizontalContentAlignment="Center">
                    <ItemsControl x:Name="lvDataBinding">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Margin="10,0,10,0">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Status}" Value="">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} : {1}">
                                            <Binding Path="Name" />
                                            <Binding Path="Status" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StatusBarItem>
            </StatusBar>
        </StatusBar>

    </Grid>


</Window>
